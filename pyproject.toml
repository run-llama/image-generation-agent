[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[lint.flake8-annotations]
mypy-init-return = true

[lint.pydocstyle]
convention = "google"

[project]
authors = [{email = "clelia@runllama.ai", name = "Clelia Astra Bertelli"}]
classifiers = [
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi>=0.115.12",
    "gradio>=3.36.1",
    "llama-index>=0.12.36,<0.13",
    "llama-index-core>=0.12.36,<0.13",
    "llama-index-llms-google-genai>=0.1.13,<0.2",
    "openai>=1.79.0",
    "orjson>=3.10.18",
    "pre-commit>=4.2.0",
    "uvicorn>=0.34.2",
]
description = "Image Generation Agent"
license = "MIT"
name = "image-generation-agent"
readme = "README.md"
requires-python = ">=3.9,<4.0"
version = "0.1.0"

[project.urls]
Repository = "https://github.com/run-llama/image-generation-agent"

[tool.hatch.build.targets.sdist]
include = ["*"]

[tool.hatch.build.targets.wheel]
include = ["*"]

[tool.mypy]
disallow_untyped_defs = true
exclude = [".venv"]
explicit_package_bases = true
ignore_missing_imports = true
mypy_path = "llama_index"
namespace_packages = true
plugins = "pydantic.mypy"
python_version = "3.9"

[tool.ruff]
exclude = [
    "_static",
    "examples",
    "llama_index/ingestion/client",
    "notebooks",
]
target-version = "py312"
lint.ignore = [
    "COM812",  # Too aggressive
    "D212",  # Using D213
    "D417",  # Too aggressive
    "F541",  # Messes with prompts.py
    "RUF100",  # Allow blanket noqa
    "TC002",
    "UP",  # Remove when we drop Python 3.9
    "PT001",
    "E501",  # Use best judgement for line-length
    "E402",  # Annoying, use best judgement
    "PYI063",
    "ANN204",  # this is annoying
    "D401",  # I disagree
    "D404",
]
# Feel free to add more here
lint.select = [
    "ANN204",
    "B009",
    "B010",
    "B011",
    "B013",
    "B014",
    "C4",
    "COM812",
    "COM819",
    "D201",
    "D202",
    "D204",
    "D207",
    "D208",
    "D209",
    "D211",
    "D213",
    "D214",
    "D215",
    "D3",
    "D4",
    "E",
    "EXE004",
    "F401",
    "F504",
    "F541",
    "F632",
    "FLY",
    "G010",
    "I002",
    "PERF1",
    "PIE790",
    "PIE794",
    "PIE808",
    "PIE810",
    "PLC0414",
    "PLE2510",
    "PLE2512",
    "PLE2513",
    "PLE2514",
    "PLE2515",
    "PLR1711",
    "PT001",
    "PT003",
    "PT006",
    "PT02",
    "PTH201",
    "PYI",
    "Q",
    "RET501",
    "RET502",
    "RET503",
    "RET504",
    "RSE",
    "RUF005",
    "RUF010",
    "RUF015",
    "RUF1",
    "SIM101",
    "SIM103",
    "SIM109",
    "SIM118",
    "SIM2",
    "SIM300",
    "SIM9",
    "TC005",
    "TD006",
    "TID",
    "TRY201",
    "W",
]
lint.unfixable = [
    "ERA001",
]

[tool.tomlsort]
all = false
in_place = true
spaces_before_inline_comment = 2  # Match Python PEP 8
spaces_indent_inline_array = 4  # Match Python PEP 8
trailing_comma_inline_array = true

[[tool.uv.index]]
name = "nvidia-pypi"
url = "https://pypi.nvidia.com"
